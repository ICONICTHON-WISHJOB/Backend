Index: config/settings.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nDjango settings for config project.\n\nGenerated by 'django-admin startproject' using Django 5.0.9.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/5.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/5.0/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\nfrom django.conf.global_settings import STATICFILES_DIRS\n\nimport environ\nimport os\nfrom django.core.exceptions import ImproperlyConfigured\n\nfrom dotenv import load_dotenv\nload_dotenv()\n\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\nenv = environ.Env(\n    # set casting, default value\n    DEBUG=(bool, False)\n)\n\n\nenviron.Env.read_env(os.path.join(BASE_DIR, '.env'))\n\ndef get_env_variable(var_name):\n    try:\n        return os.environ[var_name]\n    except KeyError:\n        error_msg = f'Set the {var_name} environment variable'\n        raise ImproperlyConfigured(error_msg)\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get('SECRET_KEY')\n# SECRET_KEY = get_env_variable('SECRET_KEY')\n\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True            # 개발환경에서는 이게 더 나은선택\n# DEBUG = False         # 배포환경에서는 올바른 선택,\n\n# ALLOWED_HOSTS = []\nALLOWED_HOSTS = ['*']\n\nCORS_ORIGIN_ALLOW_ALL = True\nCORS_ALLOW_CREDENTIALS = True\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',              # 이거 추가함\n    'job',                      # 이거는 디비 생성테스트를 위한 추가\n    'rest_framework',      # Django REST framework 추가\n    'drf_yasg',            # Swagger를 위한 drf-yasg 추가\n    'rest_framework.authtoken',\n    'config',\n]\n\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        'rest_framework.authentication.TokenAuthentication',\n    ],\n}\n\nMIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',            #이거도 추가\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',           #이거도 추가\n]\n\nROOT_URLCONF = 'config.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'config.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\n\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.postgresql',\n#         'NAME': get_env_variable('DATABASE_NAME'),\n#         'USER': get_env_variable('DATABASE_USER'),\n#         'PASSWORD': get_env_variable('DATABASE_PASSWORD'),\n#         'HOST': get_env_variable('DATABASE_HOST'),\n#         'PORT': get_env_variable('DATABASE_PORT'),\n#     }\n# }\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv('DATABASE_NAME'),\n        'USER': os.getenv('DATABASE_USER'),\n        'PASSWORD': os.getenv('DATABASE_PASSWORD'),\n        'HOST': os.getenv('DATABASE_HOST'),\n        'PORT': os.getenv('DATABASE_PORT'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/settings.py b/config/settings.py
--- a/config/settings.py	(revision 96714699f0147fcfdb5a920cf85ba74de72cc63c)
+++ b/config/settings.py	(date 1731572107378)
@@ -72,7 +72,6 @@
     'django.contrib.messages',
     'django.contrib.staticfiles',
     'corsheaders',              # 이거 추가함
-    'job',                      # 이거는 디비 생성테스트를 위한 추가
     'rest_framework',      # Django REST framework 추가
     'drf_yasg',            # Swagger를 위한 drf-yasg 추가
     'rest_framework.authtoken',
Index: config/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nURL configuration for config project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/5.1/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom . import views\nfrom django.urls import path, re_path, include\nfrom rest_framework import permissions\nfrom drf_yasg.views import get_schema_view\nfrom drf_yasg import openapi\n\n\n\nschema_view = get_schema_view(\n   openapi.Info(\n      title=\"WishJob API\",\n      default_version='v1',\n      description=\"API documentation for WishJob project\",\n      terms_of_service=\"https://www.google.com/policies/terms/\",\n      contact=openapi.Contact(email=\"your-email@example.com\"),\n      license=openapi.License(name=\"BSD License\"),\n   ),\n   public=True,\n   permission_classes=(permissions.AllowAny,),\n)\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    # Swagger UI\n    re_path(r'^swagger(?P<format>\\.json|\\.yaml)$', schema_view.without_ui(cache_timeout=0), name='schema-json'),\n    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n    path('api/signup/', views.SignupView.as_view(), name='signup'),\n    path('users/', include('users.urls')),\n]\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/urls.py b/config/urls.py
--- a/config/urls.py	(revision 96714699f0147fcfdb5a920cf85ba74de72cc63c)
+++ b/config/urls.py	(date 1731572806504)
@@ -21,8 +21,6 @@
 from drf_yasg.views import get_schema_view
 from drf_yasg import openapi
 
-
-
 schema_view = get_schema_view(
    openapi.Info(
       title="WishJob API",
